{"version":3,"sources":["webpack:///./src/app/detail-plan/detail-plan.module.ts","webpack:///./src/app/detail-plan/detail-plan.page.html","webpack:///./src/app/detail-plan/detail-plan.page.scss","webpack:///./src/app/detail-plan/detail-plan.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEO;AAEpD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gEAAc;KAC1B;CACF,CAAC;AAWF;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAThC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,gEAAc,CAAC;SAC/B,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBjC,uVAAuV,oBAAoB,uDAAuD,sBAAsB,0BAA0B,qBAAqB,usB;;;;;;;;;;;ACAve,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;;ACAF;AAEN;AACK;AAC3B;AAQjC;IAOI,wBAAoB,KAAqB,EACrB,MAAc,EACf,QAAyB;QAFxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACf,aAAQ,GAAR,QAAQ,CAAiB;QAL5C,SAAI,GAAQ,EAAE,CAAC;IAKiC,CAAC;IAEjD,iCAAQ,GAAR,cAAa,CAAC;IAEd,iCAAQ,GAAR,UAAS,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,OAAQ;QACvC,OAAO,IAAI,8CAAK,CAAE,OAAO,EAAE;YACvB,IAAI;YACJ,OAAO;YACP,IAAI,EAAE,SAAS;SAClB,CAAC,CAAC;IACP,CAAC;IAED,iCAAQ,GAAR;QACI,IAAM,IAAI,GAAG;YACT,MAAM,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC;YAC9D,QAAQ,EAAE,CAAC;oBACP,KAAK,EAAE,YAAY;oBACnB,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;oBAC1B,eAAe,EAAE;wBACb,yBAAyB;wBACzB,yBAAyB;wBACzB,yBAAyB;wBACzB,yBAAyB;wBACzB,0BAA0B;wBAC1B,yBAAyB;qBAC5B;oBACD,WAAW,EAAE;wBACT,oBAAoB;wBACpB,uBAAuB;wBACvB,uBAAuB;wBACvB,uBAAuB;wBACvB,wBAAwB;wBACxB,uBAAuB;qBAC1B;oBACD,WAAW,EAAE,CAAC;iBACjB,CAAC;SACL,CAAC;QAEF,IAAM,OAAO,GAAG;YACZ,MAAM,EAAE;gBACJ,KAAK,EAAE,CAAC;wBACJ,KAAK,EAAE;4BACH,WAAW,EAAE,IAAI;yBACpB;qBACJ,CAAC;aACL;SACJ,CAAC;QAEF,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IAE7E,CAAC;IAzDuB;QAAvB,+DAAS,CAAC,WAAW,CAAC;;qDAAW;IAFzB,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,2GAAsC;;SAEvC,CAAC;+EAQ6B,8DAAc;YACb,sDAAM;YACL,yEAAe;OATnC,cAAc,CA4D1B;IAAD,qBAAC;CAAA;AA5D0B","file":"detail-plan-detail-plan-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DetailPlanPage } from './detail-plan.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DetailPlanPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [DetailPlanPage]\n})\nexport class DetailPlanPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/plan\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Detalle del Plan</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-card>\\n    <ion-card-content>\\n      <ion-card-title>\\n        {{ item.name_service}}\\n      </ion-card-title>\\n      <p>Nombre del Plan: {{ item.adress_partner}}</p>\\n      <p>Estatus: {{ item.nameOf_status}}</p>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Fecha Inicio</ion-label>\\n      <ion-datetime displayFormat=\\\"MM/DD/YYYY\\\" min=\\\"1994-03-14\\\" max=\\\"2012-12-09\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Fecha Fin</ion-label>\\n      <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" min=\\\"1994-03-14\\\" max=\\\"2012-12-09\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-button (click)=\\\"reportes()\\\" shape=\\\"round\\\" size=\\\"small\\\" color=\\\"danger\\\" expand=\\\"full\\\">Generar Reporte</ion-button>\\n    <ion-card-content>\\n      <canvas #barCanvas></canvas>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldGFpbC1wbGFuL2RldGFpbC1wbGFuLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Service } from '../models/service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ServicesService} from '../service/services.service';\nimport { Chart } from 'chart.js';\n\n\n@Component({\n  selector: 'app-detail-plan',\n  templateUrl: './detail-plan.page.html',\n  styleUrls: ['./detail-plan.page.scss'],\n})\nexport class DetailPlanPage implements OnInit {\n\n    @ViewChild('barCanvas') barCanvas;\n    service: Service;\n    item: any = [];\n    barChart: any;\n\n    constructor(private route: ActivatedRoute,\n                private router: Router,\n                public services: ServicesService) { }\n\n    ngOnInit() { }\n\n    getChart(context, chartType, data, options?) {\n        return new Chart (context, {\n            data,\n            options,\n            type: chartType,\n        });\n    }\n\n    reportes() {\n        const data = {\n            labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n            datasets: [{\n                label: '# of Votes',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(255, 206, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(255, 159, 64, 0.2)'\n                ],\n                borderColor: [\n                    'rgba(255,99,132,1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)'\n                ],\n                borderWidth: 1\n            }]\n        };\n\n        const options = {\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }]\n            }\n        };\n\n        return this.getChart(this.barCanvas.nativeElement, 'bar', data, options);\n\n    }\n}\n"],"sourceRoot":""}
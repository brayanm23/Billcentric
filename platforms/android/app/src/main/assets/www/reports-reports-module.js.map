{"version":3,"sources":["webpack:///./src/app/reports/report.filter.ts","webpack:///./src/app/reports/report.service.ts","webpack:///./src/app/reports/reports.module.ts","webpack:///./src/app/reports/reports.page.html","webpack:///./src/app/reports/reports.page.scss","webpack:///./src/app/reports/reports.page.ts"],"names":[],"mappings":"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","file":"reports-reports-module.js","sourcesContent":["import { HttpParams } from '@angular/common/http';\n\nexport class ReportFilter {\n\n    id: number;\n    id_partner: number;\n    id_service: number;\n    id_plan: number;\n    since_date: string;\n    until_date: string;\n    del: number;\n\n\n    constructor(filter?: ReportFilter) {\n        if (filter) {\n            this.id = filter.id;\n            this.id_partner = filter.id_partner;\n            this.id_service = filter.id_service;\n            this.id_plan = filter.id_plan;\n            this.since_date = filter.since_date;\n            this.until_date = filter.until_date;\n            this.del = filter.del;\n        }\n    }\n\n    getHttpParams(httpParams = new HttpParams()): HttpParams {\n        if (this.id_partner) {\n            httpParams = httpParams.set('id_partner', this.id_partner.toString());\n        }\n        if (this.id_service) {\n            httpParams = httpParams.set('id_service', this.id_service.toString());\n        }\n        if (this.id) {\n            httpParams = httpParams.set('id', this.id.toString());\n        }\n        if (this.del) {\n            httpParams = httpParams.set('del', this.del.toString());\n        }\n        if (this.id_plan) {\n            httpParams = httpParams.set('id_plan', this.id_plan.toString());\n        }\n        if (this.until_date) {\n            httpParams = httpParams.set('until_date', this.until_date);\n        }\n        if (this.since_date) {\n            httpParams = httpParams.set('since_date', this.since_date);\n        }\n        return httpParams;\n    }\n}","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Http, RequestOptions} from '@angular/http';\nimport { BaseService } from '../services/base.service';\nimport {catchError, map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportService extends BaseService {\n\n    private readonly BASE_URL: string = BaseService.HOST + '/invoice';\n    private readonly BASE_URL2: string = BaseService.HOST + '/payment';\n\n    constructor(\n        private http: Http\n    ) { super(); }\n\n    getReportInvoices(requestOptions: RequestOptions = new RequestOptions()): Observable<any[]> {\n        requestOptions.headers = ReportService.createAuthorizationHeader();\n        return this.http.get(this.BASE_URL + '/report', requestOptions)\n            .pipe(\n                map(ReportService.extractDataFull)\n                , catchError(ReportService.handleError)\n            );\n    }\n\n    getPaymentsByInvoice(requestOptions: RequestOptions = new RequestOptions(), id_invoice): Observable<any[]> {\n        requestOptions.headers = ReportService.createAuthorizationHeader();\n        return this.http.get(this.BASE_URL2 + '/list/' + id_invoice.toString(), requestOptions)\n            .pipe(\n                map(ReportService.extractDataFull)\n                , catchError(ReportService.handleError)\n            );\n    }\n\n    getReportInvoicesCharged(requestOptions: RequestOptions = new RequestOptions()): Observable<any[]> {\n        requestOptions.headers = ReportService.createAuthorizationHeader();\n        return this.http.get(this.BASE_URL + '/report/charged', requestOptions)\n            .pipe(\n                map(ReportService.extractDataFull)\n                , catchError(ReportService.handleError)\n            );\n    }\n    getReportInvoicesGrap(requestOptions: RequestOptions = new RequestOptions()): Observable<any[]> {\n        requestOptions.headers = ReportService.createAuthorizationHeader();\n        return this.http.get(this.BASE_URL + '/report/bystatus', requestOptions)\n            .pipe(\n                map(ReportService.extractDataFull)\n                , catchError(ReportService.handleError)\n            );\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatTableModule, MatCheckboxModule, MatPaginatorModule, MatSortModule,\n         MatExpansionModule, MatSelectModule } from '@angular/material';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ReportsPage } from './reports.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReportsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatExpansionModule,\n    MatSelectModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ReportsPage]\n})\nexport class ReportsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/menu\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Facturas Cobradas</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <!--mat-accordion>\\n        <mat-expansion-panel [expanded]=\\\"isOpenSearchPanel\\\" (opened)=\\\"openSearchPanel(true)\\\" [hideToggle]=\\\"true\\\"-->\\n  <!--mat-expansion-panel-header-->\\n  <div>\\n    <div *ngIf=\\\"tableService.filter\\\" class=\\\"filter-panel-header fieldset-wrap\\\">\\n      <div class=\\\"field-row\\\">\\n        <div class=\\\"field-row-item\\\" *ngIf=\\\"tableService.filter.del\\\">\\n          <span class=\\\"label\\\">Del</span>\\n          <span *ngIf=\\\"tableService.filter.del == 1\\\"> Dia </span>\\n          <span *ngIf=\\\"tableService.filter.del == 2\\\"> Dia Anterior </span>\\n          <span *ngIf=\\\"tableService.filter.del == 3\\\"> Mes </span>\\n          <span *ngIf=\\\"tableService.filter.del == 4\\\"> Mes Anterior </span>\\n        </div>\\n\\n        <div class=\\\"field-row-item\\\" *ngIf=\\\"tableService.filter.since_date\\\">\\n          <span class=\\\"label\\\">Desde</span>\\n          <span>{{ tableService.filter.since_date }}</span>\\n        </div>\\n\\n        <div class=\\\"field-row-item\\\" *ngIf=\\\"tableService.filter.until_date\\\">\\n          <span class=\\\"label\\\">Hasta</span>\\n          <span>{{ tableService.filter.until_date }}</span>\\n        </div>\\n      </div>\\n    </div>\\n    <!--/button title=\\\"Buscar\\\" type=\\\"button\\\">\\n                    <ion-icon name=\\\"search\\\"></ion-icon>\\n                </button>\\n            <mat-expansion-panel-header-->\\n\\n    <form>\\n      <fieldset class=\\\"fieldset\\\">\\n        <div class=\\\"field-row\\\">\\n          <div class=\\\"field-row-item\\\">\\n            <label class=\\\"label\\\" for=\\\"name_plan\\\">Del</label>\\n            <input\\n              type=\\\"radio\\\"\\n              value=\\\"1\\\"\\n              (change)=\\\"dropBusqueda()\\\"\\n              name=\\\"type\\\"\\n            />\\n          </div>\\n          <div class=\\\"field-row-item\\\">\\n            <label class=\\\"label\\\" for=\\\"name_plan\\\">Rango fecha</label>\\n            <input\\n              type=\\\"radio\\\"\\n              value=\\\"2\\\"\\n              (change)=\\\"rangoBusqueda()\\\"\\n              name=\\\"type\\\"\\n            />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"field-row\\\" *ngIf=\\\"del\\\">\\n          <div class=\\\"field-row-item\\\">\\n            <mat-select\\n              placeholder=\\\"Selecciona\\\"\\n              [(value)]=\\\"filter.del\\\"\\n              [compareWith]=\\\"compareFn\\\"\\n            >\\n              <mat-option *ngFor=\\\"let opt of types\\\" [value]=\\\"opt.value\\\">{{\\n                opt.desc\\n              }}</mat-option>\\n            </mat-select>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"rango\\\">\\n          <div class=\\\"field-row-item\\\">\\n            <label class=\\\"label\\\" for=\\\"name_plan\\\">Desde</label>\\n            <input\\n              type=\\\"date\\\"\\n              name=\\\"since_date\\\"\\n              placeholder=\\\"None\\\"\\n              [(ngModel)]=\\\"filter.since_date\\\"\\n            />\\n          </div>\\n\\n          <div class=\\\"field-row-item\\\">\\n            <label class=\\\"label\\\" for=\\\"name_plan\\\">Hasta</label>\\n            <input\\n              type=\\\"date\\\"\\n              name=\\\"until_date\\\"\\n              placeholder=\\\"None\\\"\\n              [(ngModel)]=\\\"filter.until_date\\\"\\n            />\\n          </div>\\n        </div>\\n      </fieldset>\\n      <div class=\\\"options\\\">\\n        <button class=\\\"btn-text gray\\\" type=\\\"button\\\" (click)=\\\"reset()\\\">\\n          <span>Limpiar</span>\\n        </button>\\n        <button class=\\\"btn-text blue\\\" type=\\\"button\\\" (click)=\\\"search()\\\">\\n          <span>Buscar</span>\\n        </button>\\n      </div>\\n    </form>\\n  </div>\\n  <!--/mat-expansion-panel>\\n    </mat-accordion-->\\n  <div>\\n    <ion-list>\\n      <ion-item *ngFor=\\\"let item of items\\\">\\n        <ion-label text-wrap>\\n          <ion-text>\\n            <p><b>Compañia:</b> {{ item.compania }}</p>\\n            <p><b>Servicio:</b> {{ item.servicio }}</p>\\n            <p><b>Plan:</b> {{ item.plan }}</p>\\n            <p><b>Total :</b> {{ item.total }}</p>\\n\\n            <br />\\n          </ion-text>\\n        </ion-label>\\n      </ion-item>\\n    </ion-list>\\n  </div>\\n</ion-content>\\n\"","module.exports = \".btn-text.gray {\\n  background-color: #acacac;\\n  border-color: #acacac;\\n  color: #fff; }\\n\\n.btn-text.red {\\n  background-color: #fb5f5f;\\n  border-color: #fb5f5f;\\n  color: #fff; }\\n\\noption {\\n  padding-left: 5px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2JyYXlhbi9CaWxsY2VudHJpYy9zcmMvYXBwL3JlcG9ydHMvcmVwb3J0cy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBeUI7RUFDekIscUJBQXFCO0VBQ3JCLFdBQVcsRUFBQTs7QUFFYjtFQUNFLHlCQUF5QjtFQUN6QixxQkFBcUI7RUFDckIsV0FBVyxFQUFBOztBQUViO0VBQ0UsaUJBQWlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9yZXBvcnRzL3JlcG9ydHMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0bi10ZXh0LmdyYXl7XG4gIGJhY2tncm91bmQtY29sb3I6ICNhY2FjYWM7XG4gIGJvcmRlci1jb2xvcjogI2FjYWNhYztcbiAgY29sb3I6ICNmZmY7XG59XG4uYnRuLXRleHQucmVke1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmI1ZjVmO1xuICBib3JkZXItY29sb3I6ICNmYjVmNWY7XG4gIGNvbG9yOiAjZmZmO1xufVxub3B0aW9ue1xuICBwYWRkaW5nLWxlZnQ6IDVweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { TableService } from '../providers/utils/pager';\nimport { HttpParams } from '@angular/common/http';\nimport { ReportFilter } from './report.filter';\nimport { ReportService } from './report.service';\nimport { MatTableDataSource, PageEvent } from '@angular/material';\nimport { ToastController } from \"@ionic/angular\";\nimport { AlertService } from \"../providers/utils/alertas\";\n\n@Component({\n  selector: 'app-reports',\n  templateUrl: './reports.page.html',\n  styleUrls: ['./reports.page.scss'],\n})\nexport class ReportsPage implements OnInit {\n\n    dataSource: MatTableDataSource<any>;\n    displayedColumns: string[] = [ 'compania', 'servicio', 'plan', 'total'];\n    isOpenSearchPanel = false;\n    filter = new ReportFilter(this.tableService.filter);\n    confirmDelete = true;\n    items: any[] = [];\n    rango = false;\n    del = false;\n    types: any[] = [];\n    activeScroll: boolean = false;\n\n    constructor(private tableService: TableService<any>,\n              private reportService: ReportService,\n              public toastController: ToastController,\n              public alertas: AlertService) { }\n\n  ngOnInit() {\n      this.types = [{desc: 'Dia', value: 1}, {desc: 'Dia anterior', value: 2}, {desc: 'Mes', value: 3}, {desc: 'Mes Anterior', value: 4}];\n  }\n  async presentToast(text: string, color: string = \"primary\") {\n    const toast = await this.toastController.create({\n      message: text,\n      duration: 2000,\n      color: color\n    });\n    toast.present();\n  }\n    list(event?: PageEvent) {\n        let httpParams = new HttpParams()\n        httpParams = this.filter.getHttpParams(httpParams);\n        if (httpParams['updates'] != null) {\n            console.log(\"updates http params\");\n            \n            if ((this.filter.since_date != null && this.filter.since_date != \"\") && (this.filter.until_date == null || this.filter.until_date == \"\")) {\n              this.presentToast(\"Debe ingresar el parametro de fecha : Hasta\", \"primary\");\n              return;\n            }\n            if ((this.filter.since_date == null || this.filter.since_date == \"\") && (this.filter.until_date != null && this.filter.until_date != \"\")) {\n              this.presentToast(\"Debe ingresar el parametro de fecha : Desde\", \"primary\");\n              return;\n            }\n            if (this.filter.since_date>this.filter.until_date) {\n              this.presentToast(\"Fecha final debe ser mayor a la fecha inicial\", \"warning\");\n              return;\n            }\n            this.alertas.showLoader();\n            this.reportService.getReportInvoicesCharged(this.reportService.buildRequestOptionsFinder(\n              this.tableService.sort,\n              'm',\n              httpParams['updates'],\n              {\n                pageIndex: event ? event.pageIndex : this.tableService.pager.pageIndex,\n                pageSize: event ? event.pageSize : this.tableService.pager.pageSize\n              }))\n              .subscribe(params => {\n                console.log(params['result']);\n                this.items = params['result']; // items que mostrara la tabla\n                if (this.items.length === 0) { \n                  this.alertas.dismiss();\n                  this.activeScroll = false;\n                  this.presentToast('No se encontraron resultados', 'warning');\n                }\n                this.alertas.dismiss();\n            }, err => {\n                // this.notificationService.error(err);\n                console.log(err);\n            });\n        }\n    }\n\n    reset() {\n       this.items=[];\n    }\n\n    search() {\n        this.isOpenSearchPanel = false;\n        this.tableService.pager.pageIndex = 0;\n        // this.tableService.filter = new ReportFilter(this.filter);\n        this.list();\n    }\n\n    openSearchPanel(value: boolean) {\n        this.isOpenSearchPanel = value;\n        this.filter = new ReportFilter(this.tableService.filter);\n    }\n\n    compareFn(c1: any, c2: any): boolean {\n        return c1 && c2 ? c1.id === c2.id : c1 === c2;\n    }\n\n\n    rangoBusqueda() {\n        delete this.filter.del;\n        this.rango = true;\n        this.del = false;\n    }\n\n    dropBusqueda() {\n        delete this.filter.since_date;\n        delete this.filter.until_date;\n        this.del = true;\n        this.rango = false;\n    }\n\n}\n"],"sourceRoot":""}
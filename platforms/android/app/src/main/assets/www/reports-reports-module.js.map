{"version":3,"sources":["webpack:///./src/app/reports/reports.module.ts","webpack:///./src/app/reports/reports.page.html","webpack:///./src/app/reports/reports.page.scss","webpack:///./src/app/reports/reports.page.ts"],"names":[],"mappings":"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","file":"reports-reports-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatTableModule, MatCheckboxModule, MatPaginatorModule, MatSortModule,\n         MatExpansionModule, MatSelectModule } from '@angular/material';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ReportsPage } from './reports.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReportsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatExpansionModule,\n    MatSelectModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ReportsPage]\n})\nexport class ReportsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/home\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Facturas Cobradas</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n    <!--mat-accordion>\\n        <mat-expansion-panel [expanded]=\\\"isOpenSearchPanel\\\" (opened)=\\\"openSearchPanel(true)\\\" [hideToggle]=\\\"true\\\"-->\\n            <!--mat-expansion-panel-header-->\\n    <div>\\n                <div *ngIf=\\\"tableService.filter\\\" class=\\\"filter-panel-header fieldset-wrap\\\">\\n                    <div class=\\\"field-row\\\">\\n\\n                        <div class=\\\"field-row-item\\\" *ngIf=\\\"tableService.filter.del\\\">\\n                            <span class=\\\"label\\\">Del</span>\\n                            <span *ngIf=\\\"tableService.filter.del == 1\\\"> Dia </span>\\n                            <span *ngIf=\\\"tableService.filter.del == 2\\\"> Dia Anterior </span>\\n                            <span *ngIf=\\\"tableService.filter.del == 3\\\"> Mes </span>\\n                            <span *ngIf=\\\"tableService.filter.del == 4\\\"> Mes Anterior </span>\\n                        </div>\\n\\n                        <div class=\\\"field-row-item\\\" *ngIf=\\\"tableService.filter.since_date\\\">\\n                            <span class=\\\"label\\\">Desde</span>\\n                            <span>{{tableService.filter.since_date}}</span>\\n                        </div>\\n\\n                        <div class=\\\"field-row-item\\\" *ngIf=\\\"tableService.filter.until_date\\\">\\n                            <span class=\\\"label\\\">Hasta</span>\\n                            <span>{{tableService.filter.until_date}}</span>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n                <!--/button title=\\\"Buscar\\\" type=\\\"button\\\">\\n                    <ion-icon name=\\\"search\\\"></ion-icon>\\n                </button>\\n            <mat-expansion-panel-header-->\\n\\n            <form>\\n                <fieldset class=\\\"fieldset\\\">\\n\\n                    <div class=\\\"field-row\\\">\\n                        <div class=\\\"field-row-item\\\">\\n                            <label class=\\\"label\\\" for=\\\"name_plan\\\">Del</label>\\n                            <input type=\\\"radio\\\" value=\\\"1\\\" (change)=\\\"dropBusqueda()\\\" name=\\\"type\\\">\\n                        </div>\\n                        <div class=\\\"field-row-item\\\">\\n                            <label class=\\\"label\\\" for=\\\"name_plan\\\">Rango fecha</label>\\n                            <input type=\\\"radio\\\" value=\\\"2\\\" (change)=\\\"rangoBusqueda()\\\" name=\\\"type\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"field-row\\\" *ngIf=\\\"del\\\">\\n                        <div class=\\\"field-row-item\\\">\\n                            <mat-select placeholder=\\\"Selecciona\\\" [(value)]=\\\"filter.del\\\" [compareWith]=\\\"compareFn\\\">\\n                                <mat-option *ngFor=\\\"let opt of types\\\" [value]=\\\"opt.value\\\">{{opt.desc}}</mat-option>\\n                            </mat-select>\\n                        </div>\\n                    </div>\\n\\n                    <div *ngIf=\\\"rango\\\">\\n\\n                        <div class=\\\"field-row-item\\\">\\n                            <label class=\\\"label\\\" for=\\\"name_plan\\\">Desde</label>\\n                            <input type=\\\"date\\\" name=\\\"since_date\\\" placeholder=\\\"None\\\"  [(ngModel)]=\\\"filter.since_date\\\">\\n                        </div>\\n\\n                        <div class=\\\"field-row-item\\\">\\n                            <label class=\\\"label\\\" for=\\\"name_plan\\\">Hasta</label>\\n                            <input type=\\\"date\\\" name=\\\"until_date\\\" placeholder=\\\"None\\\"  [(ngModel)]=\\\"filter.until_date\\\">\\n                        </div>\\n\\n                    </div>\\n\\n                </fieldset>\\n                <div class=\\\"options\\\">\\n                    <button class=\\\"btn-text gray\\\" type=\\\"button\\\" (click)=\\\"reset()\\\">\\n                        <span >Limpiar</span>\\n                    </button>\\n                    <button class=\\\"btn-text blue\\\" type=\\\"button\\\" (click)=\\\"search()\\\">\\n                        <span>Buscar</span>\\n                    </button>\\n                </div>\\n            </form>\\n    </div>\\n        <!--/mat-expansion-panel>\\n    </mat-accordion-->\\n\\n\\n\\n</ion-content>\\n\\n\"","module.exports = \".btn-text.gray {\\n  background-color: #acacac;\\n  border-color: #acacac;\\n  color: #fff; }\\n\\n.btn-text.red {\\n  background-color: #fb5f5f;\\n  border-color: #fb5f5f;\\n  color: #fff; }\\n\\noption {\\n  padding-left: 5px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2JyYXlhbi9Fc2NyaXRvcmlvL0JpbGxjZW50cmljL3NyYy9hcHAvcmVwb3J0cy9yZXBvcnRzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUF5QjtFQUN6QixxQkFBcUI7RUFDckIsV0FBVyxFQUFBOztBQUViO0VBQ0UseUJBQXlCO0VBQ3pCLHFCQUFxQjtFQUNyQixXQUFXLEVBQUE7O0FBRWI7RUFDRSxpQkFBaUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvcmVwb3J0cy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLXRleHQuZ3JheXtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2FjYWNhYztcbiAgYm9yZGVyLWNvbG9yOiAjYWNhY2FjO1xuICBjb2xvcjogI2ZmZjtcbn1cbi5idG4tdGV4dC5yZWR7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYjVmNWY7XG4gIGJvcmRlci1jb2xvcjogI2ZiNWY1ZjtcbiAgY29sb3I6ICNmZmY7XG59XG5vcHRpb257XG4gIHBhZGRpbmctbGVmdDogNXB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { TableService } from '../providers/utils/pager';\nimport { HttpParams } from '@angular/common/http';\nimport { ReportFilter } from './report.filter';\nimport { ReportService } from './report.service';\nimport { MatTableDataSource, PageEvent } from '@angular/material';\n\n\n\n@Component({\n  selector: 'app-reports',\n  templateUrl: './reports.page.html',\n  styleUrls: ['./reports.page.scss'],\n})\nexport class ReportsPage implements OnInit {\n\n    isOpenSearchPanel = false;\n    filter = new ReportFilter(this.tableService.filter);\n    confirmDelete = true;\n    items: any[] = [];\n    rango = false;\n    del = false;\n    types: any[] = [];\n\n\n    constructor(private tableService: TableService<any>,\n              private reportService: ReportService) { }\n\n  ngOnInit() {\n      this.types = [{desc: 'Dia', value: 1}, {desc: 'Dia anterior', value: 2}, {desc: 'Mes', value: 3}, {desc: 'Mes Anterior', value: 4}];\n  }\n\n    list(event?: PageEvent) {\n        let httpParams = new HttpParams()\n        httpParams = this.filter.getHttpParams(httpParams);\n        if ( httpParams['updates'] != null) {\n            if (this.filter.since_date != null && this.filter.until_date == null){\n                console.log('Debe ingresar el parametro de fecha : Hasta');\n                return;\n            }\n            if (this.filter.since_date == null && this.filter.until_date != null){\n                console.log('Debe ingresar el parametro de fecha : Desde');\n                return;\n            }\n            this.reportService.getReportInvoicesCharged(this.reportService.buildRequestOptionsFinder(\n                this.tableService.sort,\n                'm',\n                httpParams['updates'],\n                {pageIndex: event ? event.pageIndex : this.tableService.pager.pageIndex,\n                    pageSize: event ? event.pageSize : this.tableService.pager.pageSize}))\n                .subscribe(params => {\n                console.log(params['result']);\n                this.items = params['result']; // items que mostrara la tabla\n                // this.dataSource = new MatTableDataSource<any>(this.items);\n                // this.tableService.pager = params['pager'];\n                // this.tableService.selection.clear();\n                if (this.items.length === 0) {\n                  console.log('No se encontraron resultados');\n                  // this.notificationService.alert('No se encontraron resultados para la busqueda');\n                }\n            }, err => {\n                // this.notificationService.error(err);\n                console.log(err);\n            });\n        }\n    }\n\n    reset() {\n        this.filter = new ReportFilter();\n        this.list();\n    }\n\n    search() {\n        this.isOpenSearchPanel = false;\n        this.tableService.pager.pageIndex = 0;\n        // this.tableService.filter = new ReportFilter(this.filter);\n        this.list();\n    }\n\n    openSearchPanel(value: boolean) {\n        this.isOpenSearchPanel = value;\n        this.filter = new ReportFilter(this.tableService.filter);\n    }\n\n    compareFn(c1: any, c2: any): boolean {\n        return c1 && c2 ? c1.id === c2.id : c1 === c2;\n    }\n\n\n    rangoBusqueda() {\n        delete this.filter.del;\n        this.rango = true;\n        this.del = false;\n    }\n\n    dropBusqueda() {\n        delete this.filter.since_date;\n        delete this.filter.until_date;\n        this.del = true;\n        this.rango = false;\n    }\n\n}\n"],"sourceRoot":""}
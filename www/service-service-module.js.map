{"version":3,"sources":["webpack:///./src/app/service/service.module.ts","webpack:///./src/app/service/service.page.html","webpack:///./src/app/service/service.page.scss","webpack:///./src/app/service/service.page.ts","webpack:///./src/app/service/services.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEA;AAE7C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAWF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAT7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB9B,sYAAsY,mBAAmB,2b;;;;;;;;;;;ACAzZ,+DAA+D,2I;;;;;;;;;;;;;;;;;;;ACAb;AACE;AACK;AASzD;IAEI,qBAAmB,OAAwB,EACvB,KAAqB,EACrB,MAAc;QAFf,YAAO,GAAP,OAAO,CAAiB;QACvB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;IAElC,CAAC;IAEH,8BAAQ,GAAR;QAAA,iBAeC;QAdG,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,EAAE,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAC9B,OAAO;SACV;QACD,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,EAAE,CAAC;aAC/B,SAAS,CACN,gBAAM;YACF,KAAI,CAAC,SAAS,GAAG,MAAM;gBACnB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAAC,CAAC,EAE9B,eAAK,IAAK,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC,CAAC,CAAC,CAE7D,CAAC;IACV,CAAC;IAEC,0BAAI,GAAJ;QACI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACvC,CAAC;IA3BQ,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,+FAAkC;;SAEnC,CAAC;+EAG8B,iEAAe;YAChB,8DAAc;YACb,sDAAM;OAJzB,WAAW,CA4BvB;IAAD,kBAAC;CAAA;AA5BuB;;;;;;;;;;;;;;;;;;;;;ACXmB;AACU;AAGE;AAEK;AAK5D;IAAqC,yEAAW;IAI5C,yBACY,IAAU,EACV,cAA8B;QAF1C,YAII,iBAAO,SACV;QAJW,UAAI,GAAJ,IAAI,CAAM;QACV,oBAAc,GAAd,cAAc,CAAgB;;IAG1C,CAAC;wBATQ,eAAe;IAWxB,6CAAmB,GAAnB,UAAoB,EAAU,EAAE,cAAqD;QAArD,sDAAqC,4DAAc,EAAE;QACjF,cAAc,CAAC,OAAO,GAAG,kEAAW,CAAC,yBAAyB,EAAE,CAAC;QACjE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAe,CAAC,QAAQ,GAAG,WAAW,GAAG,EAAE,EAAE,cAAc,CAAC;aAC5E,GAAG,CAAC,kEAAW,CAAC,WAAW,CAAC;aAC5B,KAAK,CAAC,kEAAW,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;;IAduB,wBAAQ,GAAW,kEAAW,CAAC,IAAI,GAAG,UAAU,CAAC;IAFhE,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAMoB,kDAAI;YACM,uEAAc;OANjC,eAAe,CAiB3B;IAAD,sBAAC;CAAA,CAjBoC,kEAAW,GAiB/C;AAjB2B","file":"service-service-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ServicePage } from './service.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ServicePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ServicePage]\n})\nexport class ServicePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\" (click)=\\\"back()\\\">\\n      <ion-icon name=\\\"arrow-round-back\\\"></ion-icon>\\n    </ion-buttons>\\n    <ion-title>\\n      Servicios\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n  <ion-list>\\n\\n    <ion-item-sliding *ngFor=\\\"let item of servicios\\\">\\n      <ion-item>\\n        {{item.name_service}}\\n      </ion-item>\\n\\n      <ion-item-options>\\n        <!--button danger (click)=\\\"removeItem(item)\\\"><icon trash></icon> Delete</button-->\\n        <ion-item-option color=\\\"danger\\\"><ion-icon name=\\\"today\\\"></ion-icon>Detalle</ion-item-option>\\n        <ion-item-option color=\\\"medium\\\"><ion-icon name=\\\"list\\\"></ion-icon>Planes</ion-item-option>\\n\\n\\n      </ion-item-options>\\n\\n    </ion-item-sliding>\\n\\n  </ion-list>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlcnZpY2Uvc2VydmljZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ServicesService} from './services.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PartnerService } from '../partner/partner.service';\nimport { Service} from '../models/service';\n\n@Component({\n  selector: 'app-service',\n  templateUrl: './service.page.html',\n  styleUrls: ['./service.page.scss'],\n})\nexport class ServicePage implements OnInit {\n    servicios: any[];\n    constructor(public service: ServicesService,\n                private route: ActivatedRoute,\n                private router: Router\n    ) {\n    }\n\n  ngOnInit() {\n      const id = this.route.snapshot.params['id'];\n      if (!id) {\n          console.log('no exite un id');\n          return;\n      }\n      this.service.getServiceByPartner(id)\n          .subscribe(\n              params => {\n                  this.servicios = params,\n                      console.log(params); },\n\n              error => {console.log('error en la lista de servicios'); }\n\n          );\n  }\n\n    back() {\n        this.router.navigate(['/partner']);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { Service } from '../models/service';\nimport { BaseService } from '../services/base.service';\nimport { Partner} from '../models/partner';\nimport { PartnerService } from '../partner/partner.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesService extends BaseService {\n\n    private static readonly BASE_URL: string = BaseService.HOST + '/service';\n\n    constructor(\n        private http: Http,\n        private partnerService: PartnerService\n    ){\n        super();\n    }\n\n    getServiceByPartner(id: number, requestOptions: RequestOptions = new RequestOptions()): Observable<Service[]> {\n        requestOptions.headers = BaseService.createAuthorizationHeader();\n        return this.http.get(ServicesService.BASE_URL + '/partner/' + id, requestOptions)\n            .map(BaseService.extractData)\n            .catch(BaseService.handleError);\n    }\n}\n"],"sourceRoot":""}
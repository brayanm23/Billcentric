{"version":3,"sources":["webpack:///./src/app/detail-plan/detail-plan.module.ts","webpack:///./src/app/detail-plan/detail-plan.page.html","webpack:///./src/app/detail-plan/detail-plan.page.scss","webpack:///./src/app/detail-plan/detail-plan.page.ts"],"names":[],"mappings":"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","file":"detail-plan-detail-plan-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DetailPlanPage } from './detail-plan.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DetailPlanPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [DetailPlanPage]\n})\nexport class DetailPlanPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/menu/plan/:id\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Detalle del Plan</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-card>\\n    <ion-card-content>\\n      <ion-card-title>\\n        {{ plan?.name_plan}}\\n      </ion-card-title>\\n      <br>\\n      <p>Costo: {{ plan?.feeCost_plan }}</p>\\n      <p>Costo de Inscripción del Plan: {{ plan?.enrollmentCost_plan }}</p>\\n      <p>Costo por Congelamiento Plan: {{ plan?.freezeCostPlan }}</p>\\n      <p>Impuesto: {{ plan?.taxRate_plan }}</p>\\n      <p>Estatus: {{ plan?.status_plan }}</p>\\n      <p>ID Plan Partner: {{ plan?.idPlan_partner }}</p>\\n      <p>Compañia: {{ partner?.name_partner }}</p>\\n      <p>Servicio: {{ service?.name_service }}</p>\\n\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card>\\n      <div padding-top=\\\"10px\\\">\\n          <div *ngIf=\\\"tableService.filter\\\" class=\\\"filter-panel-header fieldset-wrap\\\">\\n              <div class=\\\"field-row\\\">\\n\\n                  <div class=\\\"field-row-item\\\" *ngIf=\\\"tableService.filter.since_date\\\">\\n                      <span class=\\\"label\\\">Desde</span>\\n                      <span>{{tableService.filter.since_date}}</span>\\n                  </div>\\n\\n                  <div class=\\\"field-row-item\\\" *ngIf=\\\"tableService.filter.until_date\\\">\\n                      <span class=\\\"label\\\">Hasta</span>\\n                      <span>{{tableService.filter.until_date}}</span>\\n                  </div>\\n\\n              </div>\\n          </div>\\n\\n\\n          <form>\\n              <fieldset class=\\\"fieldset\\\">\\n\\n                  <div class=\\\"field-row\\\">\\n                      <div>\\n                          <div class=\\\"field-row-item\\\">\\n                              <label class=\\\"label\\\" for=\\\"name_plan\\\">Desde</label>\\n                              <input type=\\\"date\\\" name=\\\"since_date\\\" placeholder=\\\"None\\\"  [(ngModel)]=\\\"filter.since_date\\\">\\n                          </div>\\n\\n                          <div class=\\\"field-row-item\\\">\\n                              <label class=\\\"label\\\" for=\\\"name_plan\\\">Hasta</label>\\n                              <input type=\\\"date\\\" name=\\\"until_date\\\" placeholder=\\\"None\\\"  [(ngModel)]=\\\"filter.until_date\\\">\\n                          </div>\\n                      </div>\\n                  </div>\\n\\n              </fieldset>\\n              <div class=\\\"options\\\">\\n                  <button class=\\\"btn-text gray\\\" type=\\\"button\\\" (click)=\\\"reset()\\\">\\n                      <span >Limpiar</span>\\n                  </button>\\n                  <button class=\\\"btn-text blue\\\" type=\\\"button\\\" (click)=\\\"reportes()\\\">\\n                      <span>Reporte</span>\\n                  </button>\\n\\n                  <!--button class=\\\"btn-text blue\\\" type=\\\"button\\\" (click)=\\\"search()\\\">\\n                      <span>Reporte</span>\\n                  </button-->\\n              </div>\\n          </form>\\n      </div>\\n      <br>\\n      <!--div class=\\\"field-row\\\">\\n\\n          <div class=\\\"field-row-item\\\">\\n              <label class=\\\"label\\\" position=\\\"floating\\\" >Desde</label>\\n              <input type=\\\"date\\\" name=\\\"since_date\\\" placeholder=\\\"None\\\"  [(ngModel)]=\\\"filter.since_date\\\">\\n          </div>\\n\\n          <div class=\\\"field-row-item\\\">\\n              <label class=\\\"label\\\" >Hasta</label>\\n              <input type=\\\"date\\\" name=\\\"until_date\\\" placeholder=\\\"None\\\"  [(ngModel)]=\\\"filter.until_date\\\">\\n          </div>\\n\\n      </div>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Fecha Inicio</ion-label>\\n      <ion-datetime displayFormat=\\\"MM/DD/YYYY\\\" min=\\\"1994-03-14\\\" max=\\\"2012-12-09\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Fecha Fin</ion-label>\\n      <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" min=\\\"1994-03-14\\\" max=\\\"2012-12-09\\\"></ion-datetime>\\n    </ion-item-->\\n    <!--ion-button (click)=\\\"reportes()\\\" shape=\\\"round\\\" size=\\\"small\\\" color=\\\"danger\\\" expand=\\\"full\\\">Generar Reporte</ion-button-->\\n    <ion-card-content>\\n      <canvas #barCanvas width=\\\"400\\\" height=\\\"400\\\"></canvas>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldGFpbC1wbGFuL2RldGFpbC1wbGFuLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Service } from '../models/service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ServicesService} from '../service/services.service';\nimport { PlanService } from '../plan/plan.service';\nimport { ReportFilter } from '../reports/report.filter';\nimport { ReportService } from '../reports/report.service';\nimport { Pager } from '../providers/utils/pager';\nimport { TableService } from '../providers/utils/pager';\nimport { Chart } from 'chart.js';\n\n\n\n@Component({\n  selector: 'app-detail-plan',\n  templateUrl: './detail-plan.page.html',\n  styleUrls: ['./detail-plan.page.scss'],\n})\nexport class DetailPlanPage implements OnInit {\n\n    @ViewChild('barCanvas') barCanvas;\n    barChart: any;\n    partner: any;\n    service: any;\n    frecuency: any;\n    private plan: any;\n    filter = new ReportFilter(this.tableService.filter);\n    filterDateDesde = null;\n    filterDateHasta = null;\n\n    constructor(private route: ActivatedRoute,\n                private router: Router,\n                public services: ServicesService,\n                public planService: PlanService,\n                private tableService: TableService<any>,\n                private reportService: ReportService) { }\n\n    ngOnInit() {\n        const id = this.route.snapshot.params['id'];\n\n        // buscamos el plan por su ID\n        this.planService.getById(id)\n            .subscribe(plan => {\n                this.plan = plan;\n                if (this.plan.status_plan === 1) {\n                    this.plan.status_plan = 'Activo'; }\n                if (this.plan.status_plan === 2) {\n                    this.plan.status_plan = 'Inactivo'; }\n                // buscamos el servicio al que esta asociado el plan\n                this.planService.findService(this.plan.service_id).subscribe( service => {\n                    this.service = service;\n                    // buscamos el partner al que esta asociado tanto el plan como el servicio\n                    this.planService.findPartner(service['partner']).subscribe(partner => {\n                        this.partner = partner;\n                        // buscamos la frecuencia\n                        // this.planService.findFrecuency(this.plan.frecuency_id).subscribe(frecuency=>{\n                        //   this.frecuency = frecuency;\n                        //  });\n                    }, (err) => {\n                        console.log(err + 'esto es en plan mensaje 1');\n                    });\n                }, (err) => {\n                    console.log(err + 'esto es en plan mensaje 2');\n                });\n            });\n    }\n\n    getChart(context, chartType, data, options?) {\n        return new Chart (context, {\n            data,\n            options,\n            type: chartType,\n        });\n    }\n\n    reportes() {\n        const data = {\n            labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n            datasets: [{\n                label: '# of Votes',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(255, 206, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(255, 159, 64, 0.2)'\n                ],\n                borderColor: [\n                    'rgba(255,99,132,1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)'\n                ],\n                borderWidth: 1\n            }]\n        };\n\n        const options = {\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }]\n            }\n        };\n\n        return this.getChart(this.barCanvas.nativeElement, 'bar', data, options);\n\n    }\n\n    reset() {\n        this.filter = new ReportFilter();\n        this.reportes().destroy();\n        // this.dataSource = new MatTableDataSource<any>([]);\n        // this.list();\n    }\n\n    search() {\n        this.tableService.pager.pageIndex = 0;\n       //  this.tableService.filter = new ReportFilter(this.filter);\n        // this.list();\n    }\n}\n"],"sourceRoot":""}